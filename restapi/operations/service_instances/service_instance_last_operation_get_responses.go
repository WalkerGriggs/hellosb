// Code generated by go-swagger; DO NOT EDIT.

package service_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/walkergriggs/hellosb/models"
)

// ServiceInstanceLastOperationGetOKCode is the HTTP code returned for type ServiceInstanceLastOperationGetOK
const ServiceInstanceLastOperationGetOKCode int = 200

/*ServiceInstanceLastOperationGetOK OK

swagger:response serviceInstanceLastOperationGetOK
*/
type ServiceInstanceLastOperationGetOK struct {
	/*Indicates when to retry the request

	 */
	RetryAfter string `json:"RetryAfter"`

	/*
	  In: Body
	*/
	Payload *models.LastOperationResource `json:"body,omitempty"`
}

// NewServiceInstanceLastOperationGetOK creates ServiceInstanceLastOperationGetOK with default headers values
func NewServiceInstanceLastOperationGetOK() *ServiceInstanceLastOperationGetOK {

	return &ServiceInstanceLastOperationGetOK{}
}

// WithRetryAfter adds the retryAfter to the service instance last operation get o k response
func (o *ServiceInstanceLastOperationGetOK) WithRetryAfter(retryAfter string) *ServiceInstanceLastOperationGetOK {
	o.RetryAfter = retryAfter
	return o
}

// SetRetryAfter sets the retryAfter to the service instance last operation get o k response
func (o *ServiceInstanceLastOperationGetOK) SetRetryAfter(retryAfter string) {
	o.RetryAfter = retryAfter
}

// WithPayload adds the payload to the service instance last operation get o k response
func (o *ServiceInstanceLastOperationGetOK) WithPayload(payload *models.LastOperationResource) *ServiceInstanceLastOperationGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service instance last operation get o k response
func (o *ServiceInstanceLastOperationGetOK) SetPayload(payload *models.LastOperationResource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceInstanceLastOperationGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header RetryAfter

	retryAfter := o.RetryAfter
	if retryAfter != "" {
		rw.Header().Set("RetryAfter", retryAfter)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceInstanceLastOperationGetBadRequestCode is the HTTP code returned for type ServiceInstanceLastOperationGetBadRequest
const ServiceInstanceLastOperationGetBadRequestCode int = 400

/*ServiceInstanceLastOperationGetBadRequest Bad Request

swagger:response serviceInstanceLastOperationGetBadRequest
*/
type ServiceInstanceLastOperationGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceInstanceLastOperationGetBadRequest creates ServiceInstanceLastOperationGetBadRequest with default headers values
func NewServiceInstanceLastOperationGetBadRequest() *ServiceInstanceLastOperationGetBadRequest {

	return &ServiceInstanceLastOperationGetBadRequest{}
}

// WithPayload adds the payload to the service instance last operation get bad request response
func (o *ServiceInstanceLastOperationGetBadRequest) WithPayload(payload *models.Error) *ServiceInstanceLastOperationGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service instance last operation get bad request response
func (o *ServiceInstanceLastOperationGetBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceInstanceLastOperationGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceInstanceLastOperationGetUnauthorizedCode is the HTTP code returned for type ServiceInstanceLastOperationGetUnauthorized
const ServiceInstanceLastOperationGetUnauthorizedCode int = 401

/*ServiceInstanceLastOperationGetUnauthorized Unauthorized

swagger:response serviceInstanceLastOperationGetUnauthorized
*/
type ServiceInstanceLastOperationGetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceInstanceLastOperationGetUnauthorized creates ServiceInstanceLastOperationGetUnauthorized with default headers values
func NewServiceInstanceLastOperationGetUnauthorized() *ServiceInstanceLastOperationGetUnauthorized {

	return &ServiceInstanceLastOperationGetUnauthorized{}
}

// WithPayload adds the payload to the service instance last operation get unauthorized response
func (o *ServiceInstanceLastOperationGetUnauthorized) WithPayload(payload *models.Error) *ServiceInstanceLastOperationGetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service instance last operation get unauthorized response
func (o *ServiceInstanceLastOperationGetUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceInstanceLastOperationGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceInstanceLastOperationGetNotFoundCode is the HTTP code returned for type ServiceInstanceLastOperationGetNotFound
const ServiceInstanceLastOperationGetNotFoundCode int = 404

/*ServiceInstanceLastOperationGetNotFound Not Found

swagger:response serviceInstanceLastOperationGetNotFound
*/
type ServiceInstanceLastOperationGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceInstanceLastOperationGetNotFound creates ServiceInstanceLastOperationGetNotFound with default headers values
func NewServiceInstanceLastOperationGetNotFound() *ServiceInstanceLastOperationGetNotFound {

	return &ServiceInstanceLastOperationGetNotFound{}
}

// WithPayload adds the payload to the service instance last operation get not found response
func (o *ServiceInstanceLastOperationGetNotFound) WithPayload(payload *models.Error) *ServiceInstanceLastOperationGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service instance last operation get not found response
func (o *ServiceInstanceLastOperationGetNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceInstanceLastOperationGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceInstanceLastOperationGetGoneCode is the HTTP code returned for type ServiceInstanceLastOperationGetGone
const ServiceInstanceLastOperationGetGoneCode int = 410

/*ServiceInstanceLastOperationGetGone Gone

swagger:response serviceInstanceLastOperationGetGone
*/
type ServiceInstanceLastOperationGetGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceInstanceLastOperationGetGone creates ServiceInstanceLastOperationGetGone with default headers values
func NewServiceInstanceLastOperationGetGone() *ServiceInstanceLastOperationGetGone {

	return &ServiceInstanceLastOperationGetGone{}
}

// WithPayload adds the payload to the service instance last operation get gone response
func (o *ServiceInstanceLastOperationGetGone) WithPayload(payload *models.Error) *ServiceInstanceLastOperationGetGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service instance last operation get gone response
func (o *ServiceInstanceLastOperationGetGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceInstanceLastOperationGetGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceInstanceLastOperationGetPreconditionFailedCode is the HTTP code returned for type ServiceInstanceLastOperationGetPreconditionFailed
const ServiceInstanceLastOperationGetPreconditionFailedCode int = 412

/*ServiceInstanceLastOperationGetPreconditionFailed Precondition Failed

swagger:response serviceInstanceLastOperationGetPreconditionFailed
*/
type ServiceInstanceLastOperationGetPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceInstanceLastOperationGetPreconditionFailed creates ServiceInstanceLastOperationGetPreconditionFailed with default headers values
func NewServiceInstanceLastOperationGetPreconditionFailed() *ServiceInstanceLastOperationGetPreconditionFailed {

	return &ServiceInstanceLastOperationGetPreconditionFailed{}
}

// WithPayload adds the payload to the service instance last operation get precondition failed response
func (o *ServiceInstanceLastOperationGetPreconditionFailed) WithPayload(payload *models.Error) *ServiceInstanceLastOperationGetPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service instance last operation get precondition failed response
func (o *ServiceInstanceLastOperationGetPreconditionFailed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceInstanceLastOperationGetPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ServiceInstanceLastOperationGetDefault Unexpected

swagger:response serviceInstanceLastOperationGetDefault
*/
type ServiceInstanceLastOperationGetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceInstanceLastOperationGetDefault creates ServiceInstanceLastOperationGetDefault with default headers values
func NewServiceInstanceLastOperationGetDefault(code int) *ServiceInstanceLastOperationGetDefault {
	if code <= 0 {
		code = 500
	}

	return &ServiceInstanceLastOperationGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the service instance last operation get default response
func (o *ServiceInstanceLastOperationGetDefault) WithStatusCode(code int) *ServiceInstanceLastOperationGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the service instance last operation get default response
func (o *ServiceInstanceLastOperationGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the service instance last operation get default response
func (o *ServiceInstanceLastOperationGetDefault) WithPayload(payload *models.Error) *ServiceInstanceLastOperationGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service instance last operation get default response
func (o *ServiceInstanceLastOperationGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceInstanceLastOperationGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
