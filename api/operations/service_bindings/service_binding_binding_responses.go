// Code generated by go-swagger; DO NOT EDIT.

package service_bindings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/walkergriggs/hellosb/models"
)

// ServiceBindingBindingOKCode is the HTTP code returned for type ServiceBindingBindingOK
const ServiceBindingBindingOKCode int = 200

/*ServiceBindingBindingOK OK

swagger:response serviceBindingBindingOK
*/
type ServiceBindingBindingOK struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceBindingResponse `json:"body,omitempty"`
}

// NewServiceBindingBindingOK creates ServiceBindingBindingOK with default headers values
func NewServiceBindingBindingOK() *ServiceBindingBindingOK {

	return &ServiceBindingBindingOK{}
}

// WithPayload adds the payload to the service binding binding o k response
func (o *ServiceBindingBindingOK) WithPayload(payload *models.ServiceBindingResponse) *ServiceBindingBindingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding o k response
func (o *ServiceBindingBindingOK) SetPayload(payload *models.ServiceBindingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceBindingBindingCreatedCode is the HTTP code returned for type ServiceBindingBindingCreated
const ServiceBindingBindingCreatedCode int = 201

/*ServiceBindingBindingCreated Created

swagger:response serviceBindingBindingCreated
*/
type ServiceBindingBindingCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceBindingResponse `json:"body,omitempty"`
}

// NewServiceBindingBindingCreated creates ServiceBindingBindingCreated with default headers values
func NewServiceBindingBindingCreated() *ServiceBindingBindingCreated {

	return &ServiceBindingBindingCreated{}
}

// WithPayload adds the payload to the service binding binding created response
func (o *ServiceBindingBindingCreated) WithPayload(payload *models.ServiceBindingResponse) *ServiceBindingBindingCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding created response
func (o *ServiceBindingBindingCreated) SetPayload(payload *models.ServiceBindingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceBindingBindingAcceptedCode is the HTTP code returned for type ServiceBindingBindingAccepted
const ServiceBindingBindingAcceptedCode int = 202

/*ServiceBindingBindingAccepted Accepted

swagger:response serviceBindingBindingAccepted
*/
type ServiceBindingBindingAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.AsyncOperation `json:"body,omitempty"`
}

// NewServiceBindingBindingAccepted creates ServiceBindingBindingAccepted with default headers values
func NewServiceBindingBindingAccepted() *ServiceBindingBindingAccepted {

	return &ServiceBindingBindingAccepted{}
}

// WithPayload adds the payload to the service binding binding accepted response
func (o *ServiceBindingBindingAccepted) WithPayload(payload *models.AsyncOperation) *ServiceBindingBindingAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding accepted response
func (o *ServiceBindingBindingAccepted) SetPayload(payload *models.AsyncOperation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceBindingBindingBadRequestCode is the HTTP code returned for type ServiceBindingBindingBadRequest
const ServiceBindingBindingBadRequestCode int = 400

/*ServiceBindingBindingBadRequest Bad Request

swagger:response serviceBindingBindingBadRequest
*/
type ServiceBindingBindingBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceBindingBindingBadRequest creates ServiceBindingBindingBadRequest with default headers values
func NewServiceBindingBindingBadRequest() *ServiceBindingBindingBadRequest {

	return &ServiceBindingBindingBadRequest{}
}

// WithPayload adds the payload to the service binding binding bad request response
func (o *ServiceBindingBindingBadRequest) WithPayload(payload *models.Error) *ServiceBindingBindingBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding bad request response
func (o *ServiceBindingBindingBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceBindingBindingUnauthorizedCode is the HTTP code returned for type ServiceBindingBindingUnauthorized
const ServiceBindingBindingUnauthorizedCode int = 401

/*ServiceBindingBindingUnauthorized Unauthorized

swagger:response serviceBindingBindingUnauthorized
*/
type ServiceBindingBindingUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceBindingBindingUnauthorized creates ServiceBindingBindingUnauthorized with default headers values
func NewServiceBindingBindingUnauthorized() *ServiceBindingBindingUnauthorized {

	return &ServiceBindingBindingUnauthorized{}
}

// WithPayload adds the payload to the service binding binding unauthorized response
func (o *ServiceBindingBindingUnauthorized) WithPayload(payload *models.Error) *ServiceBindingBindingUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding unauthorized response
func (o *ServiceBindingBindingUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceBindingBindingConflictCode is the HTTP code returned for type ServiceBindingBindingConflict
const ServiceBindingBindingConflictCode int = 409

/*ServiceBindingBindingConflict Conflict

swagger:response serviceBindingBindingConflict
*/
type ServiceBindingBindingConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceBindingBindingConflict creates ServiceBindingBindingConflict with default headers values
func NewServiceBindingBindingConflict() *ServiceBindingBindingConflict {

	return &ServiceBindingBindingConflict{}
}

// WithPayload adds the payload to the service binding binding conflict response
func (o *ServiceBindingBindingConflict) WithPayload(payload *models.Error) *ServiceBindingBindingConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding conflict response
func (o *ServiceBindingBindingConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceBindingBindingGoneCode is the HTTP code returned for type ServiceBindingBindingGone
const ServiceBindingBindingGoneCode int = 410

/*ServiceBindingBindingGone Gone

swagger:response serviceBindingBindingGone
*/
type ServiceBindingBindingGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceBindingBindingGone creates ServiceBindingBindingGone with default headers values
func NewServiceBindingBindingGone() *ServiceBindingBindingGone {

	return &ServiceBindingBindingGone{}
}

// WithPayload adds the payload to the service binding binding gone response
func (o *ServiceBindingBindingGone) WithPayload(payload *models.Error) *ServiceBindingBindingGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding gone response
func (o *ServiceBindingBindingGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceBindingBindingPreconditionFailedCode is the HTTP code returned for type ServiceBindingBindingPreconditionFailed
const ServiceBindingBindingPreconditionFailedCode int = 412

/*ServiceBindingBindingPreconditionFailed Precondition Failed

swagger:response serviceBindingBindingPreconditionFailed
*/
type ServiceBindingBindingPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceBindingBindingPreconditionFailed creates ServiceBindingBindingPreconditionFailed with default headers values
func NewServiceBindingBindingPreconditionFailed() *ServiceBindingBindingPreconditionFailed {

	return &ServiceBindingBindingPreconditionFailed{}
}

// WithPayload adds the payload to the service binding binding precondition failed response
func (o *ServiceBindingBindingPreconditionFailed) WithPayload(payload *models.Error) *ServiceBindingBindingPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding precondition failed response
func (o *ServiceBindingBindingPreconditionFailed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceBindingBindingUnprocessableEntityCode is the HTTP code returned for type ServiceBindingBindingUnprocessableEntity
const ServiceBindingBindingUnprocessableEntityCode int = 422

/*ServiceBindingBindingUnprocessableEntity Unprocessable Entity

swagger:response serviceBindingBindingUnprocessableEntity
*/
type ServiceBindingBindingUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceBindingBindingUnprocessableEntity creates ServiceBindingBindingUnprocessableEntity with default headers values
func NewServiceBindingBindingUnprocessableEntity() *ServiceBindingBindingUnprocessableEntity {

	return &ServiceBindingBindingUnprocessableEntity{}
}

// WithPayload adds the payload to the service binding binding unprocessable entity response
func (o *ServiceBindingBindingUnprocessableEntity) WithPayload(payload *models.Error) *ServiceBindingBindingUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding unprocessable entity response
func (o *ServiceBindingBindingUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ServiceBindingBindingDefault Unexpected

swagger:response serviceBindingBindingDefault
*/
type ServiceBindingBindingDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceBindingBindingDefault creates ServiceBindingBindingDefault with default headers values
func NewServiceBindingBindingDefault(code int) *ServiceBindingBindingDefault {
	if code <= 0 {
		code = 500
	}

	return &ServiceBindingBindingDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the service binding binding default response
func (o *ServiceBindingBindingDefault) WithStatusCode(code int) *ServiceBindingBindingDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the service binding binding default response
func (o *ServiceBindingBindingDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the service binding binding default response
func (o *ServiceBindingBindingDefault) WithPayload(payload *models.Error) *ServiceBindingBindingDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service binding binding default response
func (o *ServiceBindingBindingDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceBindingBindingDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
